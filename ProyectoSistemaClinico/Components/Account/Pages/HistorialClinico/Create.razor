@page "/createhistorialclinico"
@using ProyectoSistemaClinico.Models
@using ProyectoSistemaClinico.Services

@inject NavigationManager NavigationManager
@inject HistorialClinicoService HistorialClinicoService
@inject CitasService citasService
@inject NotificationService notificationService
@rendermode InteractiveServer

<RadzenNotification />
<EditForm Model="historialClinico" OnValidSubmit="Guardar" FormName="HistorialClinicoForm">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header text-center bg-primary">
            <h3 class="text-white"><strong>Crear Nuevo Historial Clinico</strong></h3>
        </div>

        <div class="card-body">
            <div class="row">

                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Nombre del Paciente:</label>
                    <select  class="form-select" @bind="historialClinico.NombrePaciente" >
                        <option value="">Selecciona un paciente</option>
                        @foreach (var cita in cita)
                        {
                            <option value="@cita.NombrePaciente">@cita.NombrePaciente</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => historialClinico.NombrePaciente)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Fecha de Nacimiento:</label>
                    <InputDate @bind-Value="historialClinico.FechaNacimiento" class="form-control"></InputDate>
                    <ValidationMessage For="@(() => historialClinico.FechaNacimiento)" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Dirección:</label>
                    <InputText @bind-Value="historialClinico.Direccion" class="form-control" placeholder="Dirección del paciente" />
                    <ValidationMessage For="@(() => historialClinico.Direccion)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Alergias Conocidas:</label>
                    <InputText @bind-Value="historialClinico.Alergias" class="form-control" placeholder="Alergias conocidas del paciente" />
                    <ValidationMessage For="@(() => historialClinico.Alergias)" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Reacciones a las Alergias:</label>
                    <InputText @bind-Value="historialClinico.ReaccionesAlergias" class="form-control" placeholder="Reacciones a las alergias" />
                    <ValidationMessage For="@(() => historialClinico.ReaccionesAlergias)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Medicamentos Actuales y Dosis:</label>
                    <InputText @bind-Value="historialClinico.MedicamentosActuales" class="form-control" placeholder="Medicamentos actuales y dosis" />
                    <ValidationMessage For="@(() => historialClinico.MedicamentosActuales)" />
                </div>
            </div>

            <div class="col-md-0">
                <label for="HistorialEnfermedadesCirugias" class="fw-bold">Historial de Enfermedades y Cirugías Previas:</label>
                <InputTextArea @bind-Value="historialClinico.HistorialEnfermedadesCirugias" class="form-control" rows="4" placeholder="Ingrese historial de enfermedades y cirugías previas"></InputTextArea>
                <ValidationMessage For="@(() => historialClinico.HistorialEnfermedadesCirugias)" />
            </div>

            <div class="col-md-0">
                <label for="ResultadosPruebasMedicas" class="fw-bold">Resultados de Pruebas Médicas y Exámenes:</label>
                <InputTextArea @bind-Value="historialClinico.ResultadosPruebasMedicas" class="form-control" rows="4" placeholder="Ingrese resultados de pruebas médicas y exámenes"></InputTextArea>
                <ValidationMessage For="@(() => historialClinico.ResultadosPruebasMedicas)" />
            </div>

            <div class="col-md-0">
                <label for="NotasProgresoSeguimiento" class="fw-bold">Notas de Progreso y Seguimiento:</label>
                <InputTextArea @bind-Value="historialClinico.NotasProgresoSeguimiento" class="form-control" rows="4" placeholder="Ingrese notas de progreso y seguimiento"></InputTextArea>
                <ValidationMessage For="@(() => historialClinico.NotasProgresoSeguimiento)" />
            </div>

            <hr />

            <div class="card-header text-center bg-primary">
                <h3 class="text-white"><strong>Crear Nuevo Detalle Historial Clinico</strong></h3>
            </div>

            <div class="row">
                <div class="col">
                    <div>
                        <label class="fw-bold">Dieta:</label>
                        <InputText class="form-control mb-2" @bind-Value="detalleHistorialClinico.Dieta" placeholder="Ingrese la dieta"></InputText>
                    </div>
                    <div>
                        <label class="fw-bold">Ejercicio Físico:</label>
                        <InputText class="form-control mb-2" @bind-Value="detalleHistorialClinico.EjercicioFisico" placeholder="Ingrese el ejercicio físico"></InputText>
                    </div>
                </div>

                <div class="col">
                    <div>
                        <label class="fw-bold">Consumo de Alcohol:</label>
                        <InputText class="form-control mb-2" @bind-Value="detalleHistorialClinico.ConsumoAlcohol" placeholder="Ingrese el consumo de alcohol"></InputText>
                    </div>
                    <div>
                        <label class="fw-bold">Otra Información Relevante:</label>
                        <InputText class="form-control mb-2" @bind-Value="detalleHistorialClinico.OtraInformacionRelevante" placeholder="Ingrese otra información relevante"></InputText>
                    </div>
                </div>

                <div class="text-end mb-2">
                    <button type="button" class="btn btn-outline-success" @onclick="AgregarDetalle"><i class="bi bi-floppy-fill"></i> Agregar</button>
                </div>
            </div>

            <div class="col-5">
                <div class="mb-4"></div>
                <table class="table table-bordered text-center">
                    <thead class="bg-secondary text-white">
                        <tr>
                            <th class="col-3">Dieta</th>
                            <th class="col-3">Ejercicio Físico</th>
                            <th class="col-3">Consumo de Alcohol</th>
                            <th class="col-3">Otra Información Relevante</th>
                            <th class="col-1">Eliminar</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (listaDetallesHistorialClinico.Any())
                        {
                            @foreach (var item in listaDetallesHistorialClinico)
                            {
                                <tr>
                                    <td class="col-3">@item.Dieta</td>
                                    <td class="col-3">@item.EjercicioFisico</td>
                                    <td class="col-3">@item.ConsumoAlcohol</td>
                                    <td class="col-3">@item.OtraInformacionRelevante</td>
                                    <td class="col-1">
                                        <button type="button" class="btn btn-outline-danger" @onclick="(() => EliminarDetalle(item))"><i class="bi bi-trash3-fill" />Eliminar</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5">No hay detalles...</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card-footer bg-light d-flex justify-content-end">
            <div class="btn-group">
                <a href="/historialclinicoindex" class="btn btn-outline-danger"><span class="fas fa-arrow-left"></span> Volver</a>
            </div>
            <button type="submit" class="btn btn-outline-success"><i class="bi bi-floppy-fill"></i> Guardar</button>
        </div>
    </div>
</EditForm>

@code {
    private HistorialClinico historialClinico = new HistorialClinico();
    private HistorialClinicoDetalle detalleHistorialClinico = new HistorialClinicoDetalle();
    private List<HistorialClinicoDetalle> listaDetallesHistorialClinico = new List<HistorialClinicoDetalle>();
    public List<Citas> cita { get; set; } = new List<Citas>();
    public Citas Cita { get; set; } = new Citas();

    protected override async Task OnInitializedAsync()
    {
        cita = await citasService.ObtenerTodos();
    }



    public async Task Guardar()
    {


        if (listaDetallesHistorialClinico.Count > 0)
        {
            historialClinico.HistorialClinicoDetalle = listaDetallesHistorialClinico.ToList();
            var creado = await HistorialClinicoService.CrearHistorialClinico(historialClinico);

            if (creado)
            {
                var mensaje = new NotificationMessage
                    {
                        Severity = NotificationSeverity.Success,
                        Summary = "Exito",
                        Detail = "Se ha guardado correctamente",
                        Duration = 4_000
                    };
                notificationService.Notify(mensaje);
            }

            else
            {
                var mensaje = new NotificationMessage
                    {
                        Severity = NotificationSeverity.Error,
                        Summary = "Error",
                        Detail = "No se ha guardado correctamente",
                        Duration = 4_000
                    };
                notificationService.Notify(mensaje);
            }

        }

       
       
    }

   


    private void AgregarDetalle()
    {
        if (detalleHistorialClinico != null)
        {
            listaDetallesHistorialClinico.Add(detalleHistorialClinico);
            detalleHistorialClinico = new HistorialClinicoDetalle();
        }
    }

    private void EliminarDetalle(HistorialClinicoDetalle detalle)
    {
        listaDetallesHistorialClinico.Remove(detalle);
    }
}